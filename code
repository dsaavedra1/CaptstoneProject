library(dplyr)
library(xts)

#install.packages('xts')

data<-read.csv('data3.csv',header = T)
class(data)
dim(data)

summary(data)
data$Peticion<-NULL
unique(data$Entidad)

# clean regular expresion in Localidad
library(stringr)
data$Localidad<-str_replace_all(data$Localidad,'[:digit:]|[:punct:]','')%>%
  str_to_upper() ##make lowercase


library(ggplot2)
#install.packages('ggthemes')
library(ggthemes)

ggplot(data, aes(Sector))+geom_bar(fill="#00526D")+coord_flip()+
  labs(title="Sector Frequency Distribution ") + labs(x="Sector")+
  labs(y="Count")+ 
  coord_flip()+theme_economist() + scale_colour_economist()
  
  

ggplot(data, aes(Canal)) +geom_bar(fill="#00526D")+coord_flip()+
  labs(title="Number of Comunication Channels ") + labs(x="Canal")+
  labs(y="Count")+ 
  coord_flip()+theme_economist() + scale_colour_economist()


ggplot(data, aes(Entidad))+geom_bar(fill="#00526D")+
  labs(title="Number of Entidades ") + labs(x="Entidad")+
  labs(y="Count")+theme_economist() + scale_colour_economist()


# Filter the most important Sector 
nlevels(data$Sector)
data %>% 
  group_by(Sector) %>%
  summarise(no_rows = length(Sector))%>%
  arrange(desc(no_rows))





# Filter the most important institution 
nlevels(data$Entidad)
data %>% 
  group_by(Entidad) %>%
  summarise(no_rows = length(Entidad))%>%
  arrange(desc(no_rows))


# Filter the most important institution 
nlevels(data$Dependencia)
data %>% 
  group_by(Dependencia) %>%
  summarise(no_rows = length(Dependencia))%>%
  arrange(desc(no_rows))

# Filter the most important institution 
nlevels(data$Tema)
data %>% 
  group_by(Tema) %>%
  summarise(no_rows = length(Tema))%>%
  arrange(desc(no_rows))

# Filter the most important institution 
nlevels(data$Localidad)
data %>% 
  group_by(Localidad) %>%
  summarise(no_rows = length(Localidad))%>%
  arrange(desc(no_rows))

# Filter the most important institution 
nlevels(data$Canal)
data %>% 
  group_by(Canal) %>%
  summarise(no_rows = length(Canal))%>%
  arrange(desc(no_rows))

# Filter the most important Tipo de Peticion
nlevels(data$TipoPeticion)
data %>% 
  group_by(TipoPeticion) %>%
  summarise(no_rows = length(TipoPeticion))%>%
  arrange(desc(no_rows))


# Filter the most important Tipo de Peticion
nlevels(data$EstadoInicial)
data %>% 
  group_by(EstadoInicial) %>%
  summarise(no_rows = length(EstadoInicial))%>%
  arrange(desc(no_rows))


# Filter the most important Tipo de Peticion
nlevels(data$EstadoFinal)
data %>% 
  group_by(EstadoFinal) %>%
  summarise(no_rows = length(EstadoFinal))%>%
  arrange(desc(no_rows))






##################################

######### FIX TIME SERIES

#################################


library(zoo)
library('lubridate')

data$FechaIngreso<-as.Date(data$FechaIngreso)
data$FechaVencimiento<-as.Date(data$FechaVencimiento)
data$FechaFinalizacion<-as.Date(data$FechaFinalizacion)
data$FechaCierre<-as.Date(data$FechaCierre)



###########      FECHA DE INGRESO FOR DAYS TO YEAR    #####################


data$day<- factor(day(data$FechaIngreso))
data$month <- factor(month(data$FechaIngreso, label = TRUE))
data$year <- factor(year(data$FechaIngreso))
data$dayofweek <- factor(wday(data$FechaIngreso, label = TRUE))

# Visualize days
library(dplyr)
day_data <- data %>%
  group_by(day) %>%
  summarize(Total = n()) 
# To build datatable()
#install.packages('DT')
library(DT)
datatable(day_data)
library(ggplot2)
ggplot(day_data,aes(day,Total))+geom_bar(stat = 'identity',fill="#00526D")+
  labs(title="Fecha de Ingreso by Month Date") + 
  labs(x="Localidad")+labs(y="Mean Days")+theme_economist() +
  scale_colour_economist()
  
  
  



# Visualize months
library(dplyr)
month_data <- data %>%
  group_by(month) %>%
  summarize(Total = n()) 
# To build datatable()
#install.packages('DT')
library(DT)
datatable(month_data)
library(ggplot2)
ggplot(month_data, aes(month,Total))+geom_bar(stat = 'identity',fill="#00526D")+
  labs(title="Fecha de Ingreso by Month") + labs(x="Month")+
  labs(y="Total")+theme_economist() + scale_colour_economist()


# Visualize months
library(dplyr)
dayofweek_data <- data %>%
  group_by(dayofweek) %>%
  summarize(Total = n()) 
# To build datatable()
#install.packages('DT')
library(DT)
datatable(dayofweek_data)
library(ggplot2)
ggplot(dayofweek_data, aes(dayofweek,Total))+geom_bar(stat = 'identity',fill="#00526D")+
  labs(title="Fecha de Ingreso by Month Week Day ") + labs(x="Day of the Week")+
  labs(y="Total")+theme_economist() + scale_colour_economist()



# Visualize Year
library(dplyr)
year_data <- data %>%
  group_by(year) %>%
  summarize(Total = n()) 
# To build datatable()
library(DT)
datatable(year_data)
library(ggplot2)
ggplot(year_data, aes(year,Total))+geom_bar(stat = 'identity',fill="#00526D")+
  labs(title="Fecha de Ingreso by Year ") + labs(x="Year")+
  labs(y="Total")+theme_economist() + scale_colour_economist()

# Year and month Heat MAP
month_year_group<-data %>%
  group_by(year, month) %>%
  summarize(Total = n())

ggplot(month_year_group, aes(month, year, fill = Total)) +
  geom_tile(color = "white") +ggtitle("Heat Map by Month and Year")+
  theme(plot.title = element_text(hjust = 0.5))

summary(data)








################      FECHA DE VENCIMIENTO FOR DAYS TO YEAR    #####################

library('lubridate')
data$dayFv<- factor(day(data$FechaVencimiento))
data$monthFv <- factor(month(data$FechaVencimiento, label = TRUE))
data$yearFv <- factor(year(data$FechaVencimiento))
data$dayofweekFv <- factor(wday(data$FechaVencimiento, label = TRUE))

# Visualize days
library(dplyr)
day_dataFv <- data %>%
  group_by(dayFv) %>%
  summarize(Total = n()) 
# To build datatable()

library(DT)
datatable(day_dataFv)
library(ggplot2)

ggplot(day_dataFv, aes(dayFv,Total))+geom_bar(stat = 'identity',fill="#00526D")+
  labs(title="Fecha de Vencimiento by Month Date") + labs(x="Day ")+
  labs(y="Total")+theme_economist() + scale_colour_economist()




# Visualize months
library(dplyr)
month_dataFv <- data %>%
  group_by(monthFv) %>%
  summarize(Total = n()) 
# To build datatable()
library(DT)
datatable(month_dataFv)
library(ggplot2)
ggplot(month_dataFv, aes(monthFv,Total))+geom_bar(stat = 'identity',fill="#00526D")+
  labs(title="Fecha de Vencimiento by Month") + labs(x="Month ")+
  labs(y="Total")+theme_economist() + scale_colour_economist()



# Visualize months
library(dplyr)
dayofweek_dataFv <- data %>%
  group_by(dayofweekFv) %>%
  summarize(Total = n()) 
# To build datatable()

# library(DT)
datatable(dayofweek_dataFv)
library(ggplot2)

ggplot(dayofweek_dataFv, aes(dayofweekFv,Total))+geom_bar(stat = 'identity',fill="#00526D")+
  labs(title="Fecha de Vencimiento by Month Week Day ") + labs(x=" Day of the Week ")+
  labs(y="Total")+theme_economist() + scale_colour_economist()



# Visualize Year
library(dplyr)
year_dataFv <- data %>%
  group_by(yearFv) %>%
  summarize(Total = n()) 
# To build datatable()

# library(DT)
datatable(year_dataFv)
# library(ggplot2)
ggplot(year_dataFv, aes(yearFv,Total))+geom_bar(stat = 'identity',fill="#00526D")+
  labs(title="Fecha de Vencimiento by Year ") + labs(x=" Year ")+
  labs(y="Total")+theme_economist() + scale_colour_economist()





# Year and month Heat MAP
month_year_groupFv<-data %>%
  group_by(yearFv, monthFv) %>%
  summarize(Total = n())

ggplot(month_year_groupFv, aes(monthFv, yearFv, fill = Total)) +
  geom_tile(color = "white") +ggtitle("Heat Map by Month and Year")+
  theme(plot.title = element_text(hjust = 0.5))













################      FECHA DE FINALIZACION FOR DAYS TO YEAR    #####################

library('lubridate')
data$dayFF<- factor(day(data$FechaFinalizacion))
data$monthFF <- factor(month(data$FechaFinalizacion, label = TRUE))
data$yearFF <- factor(year(data$FechaFinalizacion))
data$dayofweekFF <- factor(wday(data$FechaFinalizacion, label = TRUE))

# Visualize days
library(dplyr)
day_dataFF <- data %>%
  group_by(dayFF) %>%
  summarize(Total = n()) 
# To build datatable()

# library(DT)
datatable(day_dataFF)
# library(ggplot2)
ggplot(day_dataFF, aes(dayFF,Total))+geom_bar(stat = 'identity',fill="#00526D")+
  labs(title="Fecha de Vencimiento by Year ") + labs(x=" Month Date ")+
  labs(y="Total")+theme_economist() + scale_colour_economist()





# Visualize months
#library(dplyr)
month_dataFF <- data %>%
  group_by(monthFF) %>%
  summarize(Total = n()) 
# To build datatable()

#library(DT)
datatable(month_dataFF)
#library(ggplot2)
ggplot(month_dataFF, aes(monthFF,Total))+geom_bar(stat = 'identity',fill="#00526D")+
  labs(title="Fecha de Finalizacion by Month ") + labs(x=" Month ")+
  labs(y="Total")+theme_economist() + scale_colour_economist()



# Visualize months
# library(dplyr)
dayofweek_dataFF <- data %>%
  group_by(dayofweekFF) %>%
  summarize(Total = n()) 
# To build datatable()

#library(DT)
datatable(dayofweek_dataFF)
#library(ggplot2)
ggplot(dayofweek_dataFF, aes(dayofweekFF,Total))+geom_bar(stat = 'identity',fill="#00526D")+
  labs(title="Fecha de Finalizacion by Month Week Day ") + labs(x=" Week Day ")+
  labs(y="Total")+theme_economist() + scale_colour_economist()




# Visualize Year
#library(dplyr)
year_dataFF <- data %>%
  group_by(yearFF) %>%
  summarize(Total = n()) 
# To build datatable()

#library(DT)
datatable(year_dataFF)
#library(ggplot2)
ggplot(year_dataFF, aes(yearFF,Total))+geom_bar(stat = 'identity',fill="#00526D")+
  labs(title="Fecha de Finalizacion by Year") + labs(x=" Year ")+
  labs(y="Total")+theme_economist() + scale_colour_economist()


# Year and month Heat MAP
month_year_groupFF<-data %>%
  group_by(yearFF, monthFF) %>%
  summarize(Total = n())

# The Heat map shows that months previous to the change
# of a new administration speed up the finalizacion of claims
ggplot(month_year_groupFF, aes(monthFF, yearFF, fill = Total)) +
  geom_tile(color = "white") +ggtitle("Heat Map by Month and Year")+
  theme(plot.title = element_text(hjust = 0.5))


##############################################################################


#data$dayFF<- as.numeric(data$dayFF)
#data$dayFv<- as.numeric(data$dayFv)
#data$dayFFFV<-data$dayFF-data$dayFv
#table(data$dayFFFV)
#span<-data$FechaFinalizacion %--% data$FechaVencimiento 
#time.duration<-as.duration(span)
#time.duration
#time.period <- as.period(span)
#time.period


data$dayFFFV<-difftime(data$FechaVencimiento,data$FechaFinalizacion, units = "day")


# Filter the mean of days by Localidad
dayFVFFlocaMean<-data %>% 
  group_by(Localidad) %>%
  summarise(no_rows = mean(dayFFFV))%>%
  arrange(desc(no_rows))

dayFVFFlocaMean<- dayFVFFlocaMean[-c(8),] 
dayFVFFlocaMean<- dayFVFFlocaMean[-c(21),] 

names(dayFVFFlocaMean)<-c('Localidad','AverDaySolve')


# Filter and count days by Localidad
dayFVFFLocaCount<-data %>% 
  group_by(Localidad) %>%
  summarise(no_rows = length(dayFFFV))%>%
  arrange(desc(no_rows))

dayFVFFLocaCount<- dayFVFFLocaCount[-c(1),] 
dayFVFFLocaCount<- dayFVFFLocaCount[-c(21),] 

dayFVFFLocaCount$CodLoc<-c('11','13','8','19','10',
                      '1','7','14','16','18',
                      '2','4','3','9','12',
                      '5','6','17','15','20')
dayFFFVLoca$CodLoc<-as.integer(dayFFFVLoca$CodLoc)

names(dayFVFFLocaCount)<-c('Localidad','daytosolve','CodLoc')
dayFFFVLoca[18,1]<-'CANDELARIA'
dayFFFVLoca[19,1]<-'ANTONIO NARIÑO'


ggplot(dayFVFFLocaCount,aes(Localidad,daytosolve))+geom_bar(stat = 'identity')+
  geom_bar(stat = 'identity',fill="#00526D")+coord_flip()+
  labs(title="Count Days To Finalize Claim ") + labs(x="Localidad")+
  labs(y="Number of Days")+ theme_economist() + scale_colour_economist() 

  
ggplot(dayFVFFlocaMean,aes(Localidad,AverDaySolve))+
  geom_bar(stat = 'identity',fill="#00526D")+coord_flip()+
  labs(title="Average Days To Finalize Claim ") + labs(x="Localidad")+
  labs(y="Mean Days")+ 
  coord_flip()+theme_economist() + scale_colour_economist()
  


#####################      MAPS CREATION       ##############################
#install.packages('pacman')
#pacman::p_load(leaflet, glue, dplyr, sf, tmap, tmaptools, tidycensus, ggmap, htmltools,
#               htmlwidgets)

#install.packages('leaflet')
#install.packages('glue')
#install.packages('dplyr')
#install.packages('sf')
#install.packages('tmap')
#install.packages('tmaptools')
#install.packages('tidycensus')
#install.packages('ggmap')
#install.packages('htmltools')

library(tmap)
library(ggplot2)
library(sf)
Bogolocal<- st_read("localidades/localidades.shp")

str(Bogolocal)

Bogolocal$CODIGO_LOC<-as.integer(Bogolocal$CODIGO_LOC)

common_local <- union(Bogolocal$CODIGO_LOC, dayFFFVLoca$CodLoc)
length(common_local) == length(Bogolocal$CODIGO_LOC)

BogdayFFFV<-merge(Bogolocal,dayFFFVLoca,by=c("CODIGO_LOC","CodLoc"))


BogdayFFFV<- merge(x=Bogolocal, y=dayFFFVLoca, by.x=c("CODIGO_LOC"), 
            by.y=c("CodLoc"), all.y=TRUE)


ttm()
tmap_last()
qtm(Bogolocal, fill = "NOMBRE")

# tm_shape(ca_income) +
#  tm_polygons(col = "Median.Income", id = "County")



################################################################
















##################                             ############################    
            ##     Rank Features by Importance    ##


# ensure results are repeatable
set.seed(7)
# load the library
#install.packages('mlbench')
#install.packages('caret')
library(mlbench)
library(caret)

# prepare training scheme
control <- trainControl(method="repeatedcv", number=10, repeats=3)
# train the model
model <- train(dayFFFV~., data=data, method="lvq", preProcess="scale", trControl=control)
# estimate variable importance
importance <- varImp(model, scale=FALSE)
# summarize importance
print(importance)
# plot importance
plot(importance)



data2<-sample_n(data, size =300000 , replace = T)
data2$FechaIngreso<-NULL
data2$FechaVencimiento<-NULL
data2$FechaFinalizacion<-NULL
data2$FechaCierre<-NULL
data2$dayFFFV<-factor(data2$dayFFFV)



control <- trainControl(method="cv", number=10)

# train the model
model <- train(dayFFFV~., data=data2, method="lvq", preProcess="scale", trControl=control)

# estimate variable importance
importance <- varImp(model, scale=FALSE)

# summarize importance
print(importance)

# plot importance
plot(importance)

dim(data)
